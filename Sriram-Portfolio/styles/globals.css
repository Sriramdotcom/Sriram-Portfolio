@import url('https://fonts.googleapis.com/css2?family=Outfit:wght@100;200;300;400;500;600;700;800;900&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

/* === Components Layer === */
@layer components {
  .heroButton {
    @apply text-sm backdrop-blur-sm bg-gray-300/30 text-black dark:bg-gray-700/40 dark:text-white dark:border-gray-400/10 
           mr-3 mt-3 py-2 px-5 md:px-7 rounded-full hover:duration-1000 font-normal;
  }

  .contactInput {
    @apply outline-none bg-slate-400/10 rounded-md px-3 py-2 text-gray-400 focus:text-white;
  }

  .contactButton {
    @apply bg-transparent text-gray-400 border border-[#454545] font-bold py-2 px-5 rounded-md 
           hover:text-white hover:border-[white] hover:duration-1000;
  }
}

/* === Link Hover Underline === */
.link-underline {
  border-bottom-width: 0;
  background-image: linear-gradient(transparent, transparent), linear-gradient(#2563eb, #2563eb);
  background-size: 0 2px;
  background-position: 0 100%;
  background-repeat: no-repeat;
  transition: background-size 0.5s ease-in-out;
}

.link-underline:hover {
  background-size: 100% 2px;
  background-position: 0 100%;
}

/* === Loader Fade Out Animation === */
@keyframes fadeOut {
  0% {
    opacity: 1;
  }
  80% {
    opacity: 1;
  }
  100% {
    opacity: 0;
    pointer-events: none;
  }
}

.animate-fadeOut {
  animation: fadeOut 2s ease-in-out forwards;
}

/* === Gradient Scroll Animation (for loader / backgrounds) === */
@keyframes gradientScroll {
  0% { background-position: 0% 50%; }
  100% { background-position: 100% 50%; }
}

.animate-gradient {
  background-size: 200% 200%;
  animation: gradientScroll 15s linear infinite;
}

/* === Infinite Scrolling Animation (used in InfiniteMovingCards) === */
@keyframes scroll {
  0% {
    transform: translateX(0%);
  }
  100% {
    transform: translateX(-50%);
  }
}

.animate-scroll {
  animation: scroll var(--animation-duration, 40s) linear infinite;
  animation-direction: var(--animation-direction, forwards);
}